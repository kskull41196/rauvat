{"version":3,"sources":["../../../build/models/tables/user.js"],"names":["Object","defineProperty","exports","value","base_1","require","User","sequelize","define","id","type","Sequelize","UUID","defaultValue","UUIDV1","primaryKey","fullname","STRING","avatar","sex","validate","isIn","birthday","DATE","phone","address","longitude","DOUBLE","latitude","user_type","ENUM","values","email","amount_of_like","INTEGER","amount_of_comment","amount_of_order","amount_of_purchase","username","password","registation_id","bank_user_name","bank_name","bank_serial","bank_branch","bank_province","status","BOOLEAN","latest_updated_membership","literal","allowNull","created_at","updated_at","deleted_at","timestamps","underscored","freezeTableName","paranoid","defaultScope","attributes","exclude","scopes","deleted","where","$ne"],"mappings":"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","file":"user.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nexports.User = base_1.sequelize.define('tbl_user', {\n    id: {\n        type: base_1.Sequelize.UUID,\n        defaultValue: base_1.Sequelize.UUIDV1,\n        primaryKey: true\n    },\n    fullname: {\n        type: base_1.Sequelize.STRING\n    },\n    avatar: {\n        type: base_1.Sequelize.STRING\n    },\n    sex: {\n        type: base_1.Sequelize.STRING,\n        defaultValue: 'MALE',\n        validate: {\n            isIn: [\n                [\n                    'MALE',\n                    'FEMALE',\n                    'OTHER'\n                ]\n            ]\n        }\n    },\n    birthday: {\n        type: base_1.Sequelize.DATE\n    },\n    phone: {\n        type: base_1.Sequelize.STRING\n    },\n    address: {\n        type: base_1.Sequelize.STRING\n    },\n    longitude: {\n        type: base_1.Sequelize.DOUBLE\n    },\n    latitude: {\n        type: base_1.Sequelize.DOUBLE\n    },\n    user_type: {\n        type: base_1.Sequelize.ENUM,\n        values: [\n            'NORMAL', 'SILVER', 'GOLD', 'DIAMOND'\n        ],\n        defaultValue: 'NORMAL'\n    },\n    email: {\n        type: base_1.Sequelize.STRING\n    },\n    amount_of_like: {\n        type: base_1.Sequelize.INTEGER\n    },\n    amount_of_comment: {\n        type: base_1.Sequelize.INTEGER\n    },\n    amount_of_order: {\n        type: base_1.Sequelize.INTEGER\n    },\n    amount_of_purchase: {\n        type: base_1.Sequelize.INTEGER\n    },\n    username: {\n        type: base_1.Sequelize.STRING\n    },\n    password: {\n        type: base_1.Sequelize.STRING\n    },\n    registation_id: {\n        type: base_1.Sequelize.STRING\n    },\n    bank_user_name: {\n        type: base_1.Sequelize.STRING\n    },\n    bank_name: {\n        type: base_1.Sequelize.STRING\n    },\n    bank_serial: {\n        type: base_1.Sequelize.STRING\n    },\n    bank_branch: {\n        type: base_1.Sequelize.STRING\n    },\n    bank_province: {\n        type: base_1.Sequelize.STRING\n    },\n    status: {\n        type: base_1.Sequelize.BOOLEAN,\n        defaultValue: true,\n    },\n    latest_updated_membership: {\n        type: 'TIMESTAMP',\n        defaultValue: base_1.Sequelize.literal('CURRENT_TIMESTAMP'),\n        allowNull: false\n    },\n    created_at: {\n        type: 'TIMESTAMP',\n        defaultValue: base_1.Sequelize.literal('CURRENT_TIMESTAMP'),\n        allowNull: false\n    },\n    updated_at: {\n        type: 'TIMESTAMP',\n        defaultValue: base_1.Sequelize.literal('CURRENT_TIMESTAMP'),\n        allowNull: false\n    },\n    deleted_at: { type: 'TIMESTAMP' }\n}, {\n    timestamps: true,\n    underscored: true,\n    freezeTableName: true,\n    paranoid: true,\n    defaultScope: {\n        attributes: { exclude: ['deleted_at'] }\n    },\n    scopes: {\n        deleted: {\n            where: { deleted_at: { $ne: null } },\n            paranoid: false\n        }\n    }\n});\n//# sourceMappingURL=user.js.map"]}