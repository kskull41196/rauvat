{"version":3,"sources":["../../../build/routers/v1/post.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crud_1","require","controllers_1","middlewares_1","PostRouter","postController","router","get","route","getPostWithHistory","req","res","params","id","body","editor","tokenInfo","payload","employee_id","user_id","editor_role","role","controller","update","filter","onSuccess","queryMiddleware","run","authInfoMiddleware","CrudRouter","default"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,oCAAa,oEAAQ,UAAKA,SAAb,CAAD,+BAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AAAA;AAAA;;AACrF,WAAO,KAAK,4DAAMD,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAAA;;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAA;AAAA;AAAEA,mBAAOC,IAAP,8BAAcT,QAAQQ,OAAOL,KAAf,CAAd,+BAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAA;AAAA;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAHxF;AAIvDH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyB,qEAAc,EAAd,CAAzB,CAAb,EAAyDU,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPe,CAAZ,CAAJ;;AAQAO,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEX,OAAO,IAAT,EAA7C;AACA,IAAMY,kCAASC,QAAQ,SAAR,CAAT,CAAN;AACA,IAAMC,yCAAgBD,QAAQ,mBAAR,CAAhB,CAAN;AACA,IAAME,yCAAgBF,QAAQ,mBAAR,CAAhB,CAAN;;IACMG,U;;;AACF,0BAAc;AAAA;AAAA;AAAA;AAAA,qIACJF,cAAcG,cADV;AAEb;;;;wCACe;AAAA;AAAA;;AACZ,iBAAKC,MAAL,CAAYC,GAAZ,CAAgB,4BAAhB,EAA8C,KAAKC,KAAL,CAAW,KAAKC,kBAAhB,CAA9C;AACH;;;+BACMC,G,EAAKC,G,EAAK;AAAA;AAAA;;AACb,mBAAOhC,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACpB+B,IAAIE,MADgB,GAC3BC,EAD2B,SAC3BA,EAD2B;AAAA;;AAEnCH,oCAAII,IAAJ,CAASC,MAAT,GAAkB,+BAAIC,SAAJ,CAAcC,OAAd,CAAsBC,WAAtB,gCAAqCR,IAAIM,SAAJ,CAAcC,OAAd,CAAsBE,OAA3D,CAAlB;AAFmC;AAGnCT,oCAAII,IAAJ,CAASM,WAAT,GAAuBV,IAAIM,SAAJ,CAAcK,IAArC;AAHmC;AAAA;AAAA,uCAId,KAAKC,UAAL,CAAgBC,MAAhB,CAAuBb,IAAII,IAA3B,EAAiC;AAClDU,4CAAQ,EAAEX,MAAF;AAD0C,iCAAjC,CAJc;;AAAA;AAI7BpB,sCAJ6B;AAAA;;AAOnC,qCAAKgC,SAAL,CAAed,GAAf,EAAoBlB,MAApB;;AAPmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AASH;;;2CACkBiB,G,EAAKC,G,EAAK;AAAA;AAAA;;AACzB,mBAAOhC,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACpB+B,IAAIE,MADgB,GAC3BC,EAD2B,SAC3BA,EAD2B;AAAA;AAAA;AAAA,uCAEd,KAAKS,UAAL,CAAgBb,kBAAhB,CAAmCC,IAAII,IAAvC,EAA6C;AAC9DU,4CAAQ,EAAEX,MAAF;AADsD,iCAA7C,CAFc;;AAAA;AAE7BpB,sCAF6B;AAAA;;AAKnC,qCAAKgC,SAAL,CAAed,GAAf,EAAoBlB,MAApB;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AAOH;;;6CACoB;AAAA;AAAA;;AACjB,mBAAO,CAACU,cAAcuB,eAAd,CAA8BC,GAA9B,EAAD,CAAP;AACH;;;6CACoB;AAAA;AAAA;;AACjB,mBAAO,CAACxB,cAAcuB,eAAd,CAA8BC,GAA9B,EAAD,CAAP;AACH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CAACxB,cAAcyB,kBAAd,CAAiCD,GAAjC,EAAD,CAAP;AACH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CAACxB,cAAcyB,kBAAd,CAAiCD,GAAjC,EAAD,CAAP;AACH;;;+CACsB;AAAA;AAAA;;AACnB,mBAAO,CAACxB,cAAcyB,kBAAd,CAAiCD,GAAjC,EAAD,CAAP;AACH;;;4CACmB;AAAA;AAAA;;AAChB,mBAAO,CAACxB,cAAcyB,kBAAd,CAAiCD,GAAjC,EAAD,CAAP;AACH;;;GA5CoB3B,OAAO6B,U;;;;AA8ChC9B,QAAQ+B,OAAR,GAAkB1B,UAAlB;AACA","file":"post.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crud_1 = require(\"../crud\");\nconst controllers_1 = require(\"@/controllers\");\nconst middlewares_1 = require(\"@/middlewares\");\nclass PostRouter extends crud_1.CrudRouter {\n    constructor() {\n        super(controllers_1.postController);\n    }\n    customRouting() {\n        this.router.get('/get_post_with_history/:id', this.route(this.getPostWithHistory));\n    }\n    update(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            req.body.editor = req.tokenInfo.payload.employee_id || req.tokenInfo.payload.user_id;\n            req.body.editor_role = req.tokenInfo.role;\n            const result = yield this.controller.update(req.body, {\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    getPostWithHistory(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            const result = yield this.controller.getPostWithHistory(req.body, {\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    getListMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    getItemMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    updateMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteAllMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    createMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n}\nexports.default = PostRouter;\n//# sourceMappingURL=post.js.map"]}