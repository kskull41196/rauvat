{"version":3,"sources":["../../../build/routers/v1/user.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crud_1","require","controllers_1","middlewares_1","_","UserRouter","userController","router","post","route","checkUsername","get","getBillsMiddlewares","getBills","upgradeMiddlewares","upgrade","downgradeMiddlewares","downgrade","put","updateMiddlewares","updateRegistrationId","createMiddlewares","sendNotification","likePostMiddlewares","likePost","likeCommentMiddlewares","likeComment","commentOnPostMiddlewares","commentOnPost","getLikesMiddlewares","getLikes","getCommentsMiddlewares","getComments","unlikePostMiddlewares","unlikePost","unlikeCommentMiddlewares","unlikeComment","delete","deleteCommentOnPostMiddlewares","deleteCommentOnPost","req","res","body","onSuccess","params","id","controller","filter","status","json","code","results","object","message","update","fullname","undefined","sex","birthday","Date","address","email","create","getList","queryInfo","objects","toJSON","resultNotPass","assign","rowJson","rows","i","length","jsonObject","dataValues","page","floor","offset","limit","pagination","getItem","keys","authInfoMiddleware","run","pageInfo","query","tokenInfo","payload","user_id","onSuccessAsList","queryMiddleware","adminAuthInfoMiddleware","validateJSON","type","properties","format","user_type","enum","required","post_id","comment_id","content","CrudRouter","default"],"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","file":"user.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crud_1 = require(\"../crud\");\nconst controllers_1 = require(\"@/controllers\");\nconst middlewares_1 = require(\"@/middlewares\");\nconst _ = require(\"lodash\");\nclass UserRouter extends crud_1.CrudRouter {\n    constructor() {\n        super(controllers_1.userController);\n    }\n    customRouting() {\n        this.router.post('/check_username', this.route(this.checkUsername));\n        this.router.get('/bills', this.getBillsMiddlewares(), this.route(this.getBills));\n        this.router.post('/upgrade', this.upgradeMiddlewares(), this.route(this.upgrade));\n        this.router.post('/downgrade', this.downgradeMiddlewares(), this.route(this.downgrade));\n        this.router.put('/update_registration_id/:id', this.updateMiddlewares(), this.route(this.updateRegistrationId));\n        this.router.post('/send_notification', this.createMiddlewares(), this.route(this.sendNotification));\n        this.router.post('/like/post/:post_id', this.likePostMiddlewares(), this.route(this.likePost));\n        this.router.post('/like/comment/:comment_id', this.likeCommentMiddlewares(), this.route(this.likeComment));\n        this.router.post('/comment/:post_id', this.commentOnPostMiddlewares(), this.route(this.commentOnPost));\n        this.router.get('/likes', this.getLikesMiddlewares(), this.route(this.getLikes));\n        this.router.get('/comments', this.getCommentsMiddlewares(), this.route(this.getComments));\n        this.router.post('/unlike/post/:post_id', this.unlikePostMiddlewares(), this.route(this.unlikePost));\n        this.router.post('/unlike/comment/:comment_id', this.unlikeCommentMiddlewares(), this.route(this.unlikeComment));\n        this.router.delete('/comment/:id', this.deleteCommentOnPostMiddlewares(), this.route(this.deleteCommentOnPost));\n    }\n    sendNotification(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield controllers_1.userController.sendNotification(req.body);\n            this.onSuccess(res, result);\n        });\n    }\n    updateRegistrationId(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            const result = yield this.controller.updateRegistrationId(req.body, {\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    checkUsername(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.controller.checkUsername(req.body);\n            if (result['duplicate'] == true) {\n                res.status(201).json({\n                    code: 201,\n                    results: { object: { message: result['resultOfCheckUser'] } }\n                });\n            }\n            else {\n                this.onSuccess(res, result);\n            }\n        });\n    }\n    update(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            const result = yield this.controller.update(req.body, {\n                filter: { id }\n            });\n            this.onSuccess(res, result);\n        });\n    }\n    create(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (req.body.fullname == undefined) {\n                req.body.fullname = \"\";\n            }\n            if (req.body.sex == undefined) {\n                req.body.sex = \"OTHER\";\n            }\n            if (req.body.birthday == undefined) {\n                req.body.birthday = new Date();\n            }\n            if (req.body.address == undefined) {\n                req.body.address = \"\";\n            }\n            if (req.body.email == undefined) {\n                req.body.email = \"\";\n            }\n            const result = yield controllers_1.userController.create(req.body);\n            this.onSuccess(res, result);\n        });\n    }\n    getList(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let objects = yield this.controller.getList(req.queryInfo);\n            if (objects.toJSON) {\n                objects = objects.toJSON();\n            }\n            const resultNotPass = Object.assign({\n                objects\n            }, undefined);\n            const rowJson = resultNotPass.objects.rows;\n            for (let i = 0; i < rowJson.length; i++) {\n                const jsonObject = rowJson[i].dataValues;\n                delete jsonObject[\"password\"];\n                resultNotPass.objects.rows[i].dataValues = jsonObject;\n            }\n            const page = _.floor(req.queryInfo.offset / req.queryInfo.limit) + 1;\n            res.json({\n                code: 200,\n                results: resultNotPass,\n                pagination: {\n                    'current_page': page,\n                    'next_page': page + 1,\n                    'prev_page': page - 1,\n                    'limit': req.queryInfo.limit\n                }\n            });\n        });\n    }\n    getItem(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { id } = req.params;\n            req.queryInfo.filter.id = id;\n            let object = yield this.controller.getItem(req.queryInfo);\n            object = object || {};\n            const resultNotPass = Object.assign({\n                object\n            }, undefined);\n            const rowJson = resultNotPass.object;\n            const jsonObject = rowJson.dataValues;\n            delete jsonObject[\"password\"];\n            resultNotPass.object.dataValues = jsonObject;\n            if (Object.keys(object).length === 0) {\n                res.json({\n                    code: 200\n                });\n            }\n            else {\n                res.json({\n                    code: 200,\n                    results: resultNotPass\n                });\n            }\n        });\n    }\n    getBillsMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    getBills(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.pageInfo = {};\n            req.pageInfo.limit = parseInt(req.query.limit) || 10;\n            req.pageInfo.offset = parseInt(req.query.page) || 1;\n            req.pageInfo.offset = (req.pageInfo.offset - 1) * req.pageInfo.limit;\n            const result = yield this.controller.getBills(req.tokenInfo.payload.user_id, req.pageInfo);\n            this.onSuccessAsList(res, result, undefined, req.pageInfo);\n        });\n    }\n    getListMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    getItemMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    updateMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run(), middlewares_1.adminAuthInfoMiddleware.run()];\n    }\n    deleteAllMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run(), middlewares_1.adminAuthInfoMiddleware.run()];\n    }\n    createMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run(), middlewares_1.adminAuthInfoMiddleware.run()];\n    }\n    upgradeMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run(),\n        ];\n    }\n    upgrade(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.body.user_id = req.body.user_id || req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.body, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    user_type: {\n                        enum: [\n                            'SILVER',\n                            'GOLD',\n                            'DIAMOND'\n                        ]\n                    }\n                },\n                required: ['user_id', 'user_type']\n            });\n            const result = yield this.controller.upgrade(req.body);\n            this.onSuccess(res, result);\n        });\n    }\n    downgradeMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run(),\n            middlewares_1.adminAuthInfoMiddleware.run()\n        ];\n    }\n    downgrade(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.validateJSON(req.body, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['user_id']\n            });\n            const result = yield this.controller.downgrade(req.body);\n            this.onSuccess(res, result);\n        });\n    }\n    likePostMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    likePost(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.params.user_id = req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.params, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    post_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['user_id', 'post_id']\n            });\n            const result = yield this.controller.likePost(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n    likeCommentMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    likeComment(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.params.user_id = req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.params, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    comment_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['user_id', 'comment_id']\n            });\n            const result = yield this.controller.likeComment(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n    commentOnPostMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    commentOnPost(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.body.user_id = req.tokenInfo.payload.user_id;\n            req.body = Object.assign(req.body, req.params);\n            yield this.validateJSON(req.body, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    post_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    content: {\n                        type: 'string'\n                    }\n                },\n                required: ['user_id', 'post_id', 'content']\n            });\n            const result = yield this.controller.commentOnPost(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n    getLikesMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run(),\n            middlewares_1.queryMiddleware.run()\n        ];\n    }\n    getLikes(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.queryInfo.filter.user_id = req.tokenInfo.payload.user_id;\n            const result = yield this.controller.getLikes(req.queryInfo);\n            this.onSuccessAsList(res, result, undefined, req.queryInfo);\n        });\n    }\n    getCommentsMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run(),\n            middlewares_1.queryMiddleware.run()\n        ];\n    }\n    getComments(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.queryInfo.filter.user_id = req.tokenInfo.payload.user_id;\n            const result = yield this.controller.getComments(req.queryInfo);\n            this.onSuccessAsList(res, result, undefined, req.queryInfo);\n        });\n    }\n    unlikePostMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    unlikePost(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.params.user_id = req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.params, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    post_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['user_id', 'post_id']\n            });\n            const result = yield this.controller.unlikePost(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n    unlikeCommentMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    unlikeComment(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.params.user_id = req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.params, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    comment_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['user_id', 'comment_id']\n            });\n            const result = yield this.controller.unlikeComment(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n    deleteCommentOnPostMiddlewares() {\n        return [\n            middlewares_1.authInfoMiddleware.run()\n        ];\n    }\n    deleteCommentOnPost(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            req.params.user_id = req.tokenInfo.payload.user_id;\n            yield this.validateJSON(req.params, {\n                type: 'object',\n                properties: {\n                    user_id: {\n                        type: 'string',\n                        format: 'uuid'\n                    },\n                    id: {\n                        type: 'string',\n                        format: 'uuid'\n                    }\n                },\n                required: ['id', 'user_id']\n            });\n            const result = yield this.controller.deleteCommentOnPost(req.params);\n            this.onSuccess(res, result);\n        });\n    }\n}\nexports.default = UserRouter;\n//# sourceMappingURL=user.js.map"]}