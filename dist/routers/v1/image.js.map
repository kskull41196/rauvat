{"version":3,"sources":["../../../build/routers/v1/image.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","base_1","require","middlewares_1","multer","fs","express","config_1","services_1","IMAGE_URL_LOCAL","config","server","protocol","host","port","IMAGE_URL_SERVER","TYPE_IMAGE","FILE_IMAGE_PATH","ImageRouter","router","Router","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","upload","get","route","getImage","post","updateImageMiddlewares","single","updateAvatar","res","imageUrl","onSuccess","url","params","readFile","err","data","errorService","database","queryFail","message","writeHead","end","authInfoMiddleware","run","queryMiddleware","blockMiddleware","BaseRouter","default"],"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","file":"image.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nconst middlewares_1 = require(\"@/middlewares\");\nconst multer = require(\"multer\");\nconst fs = require(\"fs\");\nconst express = require(\"express\");\nconst config_1 = require(\"@/config\");\nconst services_1 = require(\"@/services\");\nconst IMAGE_URL_LOCAL = `${config_1.config.server.protocol}://${config_1.config.server.host}:${config_1.config.server.port}` + '/api/v1/image/get/';\nconst IMAGE_URL_SERVER = `${config_1.config.server.protocol}://${config_1.config.server.host}` + (config_1.config.server.port === 5000 ? `:${config_1.config.server.port}` : '') + '/api/v1/image/get/';\nconst TYPE_IMAGE = '.png';\nconst FILE_IMAGE_PATH = 'image/';\nclass ImageRouter extends base_1.BaseRouter {\n    constructor() {\n        super();\n        this.router = express.Router();\n        const storage = multer.diskStorage({\n            destination: function (req, file, cb) {\n                cb(null, FILE_IMAGE_PATH);\n            },\n            filename: function (req, file, cb) {\n                cb(null, file.fieldname + '-' + Date.now() + TYPE_IMAGE);\n            }\n        });\n        const upload = multer({ storage: storage });\n        this.router.get('/get/:filename', this.route(this.getImage));\n        this.router.post('/upload/', this.updateImageMiddlewares(), upload.single(\"image\"), this.route(this.updateAvatar));\n    }\n    updateAvatar(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let imageUrl = IMAGE_URL_SERVER;\n            if (config_1.config.server.host == \"localhost\") {\n                imageUrl = IMAGE_URL_LOCAL;\n            }\n            const result = imageUrl + req.file.filename;\n            this.onSuccess(res, { url: result });\n        });\n    }\n    getImage(req, res) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { filename } = req.params;\n            fs.readFile(FILE_IMAGE_PATH + filename, function (err, data) {\n                if (err)\n                    throw services_1.errorService.database.queryFail(err.message);\n                else {\n                    res.writeHead(200, { 'Content-Type': 'image/png' });\n                    res.end(data);\n                }\n            });\n        });\n    }\n    updateImageMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    getListMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    getItemMiddlewares() {\n        return [middlewares_1.queryMiddleware.run()];\n    }\n    updateMiddlewares() {\n        return [middlewares_1.authInfoMiddleware.run()];\n    }\n    deleteMiddlewares() {\n        // return [blockMiddleware.run()]\n        return [];\n    }\n    deleteAllMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n    createMiddlewares() {\n        return [middlewares_1.blockMiddleware.run()];\n    }\n}\nexports.default = ImageRouter;\n//# sourceMappingURL=image.js.map"]}