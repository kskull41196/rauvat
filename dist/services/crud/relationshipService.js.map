{"version":3,"sources":["../../../build/services/crud/relationshipService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","crudService_pg_1","require","tables_1","RelationshipService","Relationship","params","user_id","limit","page","paramsQuery","where","$or","sender_id","receiver_id","offset","include","association","action","findAndCountAll","CrudService"],"mappingsoCAAa,oEAAQ,UAAKA,SAAb,CAAD,+BAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AAAA;AAAA;;AACrF,WAAO,KAAK,4DAAMD,IAAIE,OAAV,CAAL,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAAA;;AACvD,iBAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAUO,IAAV,CAAeF,KAAf,CAAL;AAA8B,aAApC,CAAqC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC3F,iBAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAA;AAAA;AAAE,gBAAI;AAAA;AAAEC,qBAAKN,UAAU,OAAV,EAAmBK,KAAnB,CAAL;AAAkC,aAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAA;AAAEL,uBAAOK,CAAP;AAAY;AAAE;AAC9F,iBAASF,IAAT,CAAcI,MAAd,EAAsB;AAAA;AAAA;AAAEA,mBAAOC,IAAP,8BAAcT,QAAQQ,OAAOL,KAAf,CAAd,+BAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAA;AAAA;AAAEA,wBAAQQ,OAAOL,KAAf;AAAwB,aAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;AAHxF;AAIvDH,aAAK,CAACN,YAAYA,UAAUa,KAAV,CAAgBhB,OAAhB,EAAyB,qEAAc,EAAd,CAAzB,CAAb,EAAyDU,IAAzD,EAAL;AACH,KALM,CAAP;AAMH,CAPe,CAAZ,CAAJ;;AAQAO,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEX,OAAO,IAAT,EAA7C;AACA,IAAMY,4CAAmBC,QAAQ,mBAAR,CAAnB,CAAN;AACA,IAAMC,oCAAWD,QAAQ,qBAAR,CAAX,CAAN;;IACME,mB;;;AACF,mCAAc;AAAA;AAAA;AAAA;AAAA,uJACJD,SAASE,YADL;AAEb;;;;mCACUC,M,EAAQ;AAAA;AAAA;;AACf,mBAAO1B,UAAU,IAAV,EAAgB,KAAK,CAArB,EAAwB,KAAK,CAA7B,0CAAgC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACJ0B,MADI,GAC7BC,OAD6B,SAC7BA,OAD6B,EACpBC,KADoB,SACpBA,KADoB,EACbC,IADa,SACbA,IADa;AAAA;;AAEnCD,wCAAQA,QAAQ,CAAhB;AAFmC;AAGnCC,uCAAOA,OAAO,CAAd;AACIC,2CAJ+B,4BAIjB;AACdC,2CAAO;AACHC,6CAAK,CACD;AACIC,uDAAWN;AADf,yCADC,EAID;AACIO,yDAAaP;AADjB,yCAJC;AADF,qCADO;AAWdQ,4CAAQ,CAACN,OAAO,CAAR,IAAaD,KAXP;AAYdQ,6CAAS,CACL;AACIC,qDAAa,SADjB;AAEIN,+CAAO;AACHO,oDAAQ;AADL;AAFX,qCADK;AAZK,iCAJiB;AAAA;;AAyBnC,oCAAIV,SAAS,CAAb,EAAgB;AAAA;AAAA;;AACZE,gDAAYF,KAAZ,GAAoBA,KAApB;AACH,iCAFD;AAAA;AAAA;AAzBmC;AAAA;AAAA,uCA4BtBL,SAASE,YAAT,CAAsBc,eAAtB,CAAsCT,WAAtC,CA5BsB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAAP;AA8BH;;;GAnC6BT,iBAAiBmB,W;;;;AAqCnDpB,QAAQI,mBAAR,GAA8BA,mBAA9B;AACA","file":"relationshipService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crudService_pg_1 = require(\"../crudService.pg\");\nconst tables_1 = require(\"@/models/tables\");\nclass RelationshipService extends crudService_pg_1.CrudService {\n    constructor() {\n        super(tables_1.Relationship);\n    }\n    getFriends(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { user_id, limit, page } = params;\n            limit = limit | 0;\n            page = page | 1;\n            let paramsQuery = {\n                where: {\n                    $or: [\n                        {\n                            sender_id: user_id\n                        },\n                        {\n                            receiver_id: user_id\n                        }\n                    ]\n                },\n                offset: (page - 1) * limit,\n                include: [\n                    {\n                        association: 'history',\n                        where: {\n                            action: 'ACCEPTED'\n                        }\n                    }\n                ]\n            };\n            if (limit != 0) {\n                paramsQuery.limit = limit;\n            }\n            return yield tables_1.Relationship.findAndCountAll(paramsQuery);\n        });\n    }\n}\nexports.RelationshipService = RelationshipService;\n//# sourceMappingURL=relationshipService.js.map"]}