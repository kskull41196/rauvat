{"version":3,"sources":["../../../build/services/crud/billService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","services_1","require","models_1","crudService_pg_1","config_1","const_1","BillService","Bill","params","option","exec","findById","filter","id","allowNull","item","keys","j","length","dataValues","undefined","created_at","updated_at","deleted_at","status","editor","editor_type","model","create","applyCreateOptions","createBill","updated_id","editor_role","User","findOne","where","buyer_id","itemBuyer","seller_id","itemSeller","registrationTokenBuyer","registation_id","registrationTokenSeller","message","username","firebaseService","sendNotification","FCM_ACTIONS","BILL","update","BillItem","bill_id","BillActivity","PaidHistory","bill","JSON","parse","stringify","object","findBillHistory","current_bill","push","editor_user","Employee","editor_employee","history","limit","config","database","defaultPageSize","offset","scope","modelWithScope","findAndCountAll","applyFindOptions","items","bulk_items","total_price","Product","product_id","product","errorService","recordNotFound","amount","price","sequelize","transaction","t","bulkCreateBillItem","bulkCreate","bill_items","action","bill_activity","remain_amount","paid_history","current_paid_history_id","current_bill_activity_id","commit","console","log","rollback","getItem","$or","user_id","include","association","attributes","col","CrudService"],"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","file":"billService.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services_1 = require(\"@/services\");\nconst models_1 = require(\"@/models\");\nconst crudService_pg_1 = require(\"../crudService.pg\");\nconst config_1 = require(\"@/config\");\nconst const_1 = require(\"../../const\");\nclass BillService extends crudService_pg_1.CrudService {\n    constructor() {\n        super(models_1.Bill);\n    }\n    update(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const item = yield this.exec(models_1.Bill.findById(option.filter.id), { allowNull: false });\n            //get data from params to item\n            var keys = Object.keys(params);\n            for (var j = 0; j < keys.length; j++) {\n                item.dataValues[keys[j]] = params[keys[j]];\n            }\n            item.dataValues.id = undefined;\n            item.dataValues.created_at = undefined;\n            item.dataValues.updated_at = undefined;\n            item.dataValues.deleted_at = undefined;\n            item.dataValues.status = undefined;\n            item.dataValues.editor = undefined;\n            item.dataValues.editor_type = undefined;\n            const createBill = yield this.exec(this.model.create(item.dataValues, this.applyCreateOptions(option)));\n            item.dataValues.id = option.filter.id;\n            params.updated_id = createBill.id;\n            var editor_type;\n            if (params.editor_role == 'ADMIN') {\n                params.editor_type = \"EMPLOYEE\";\n                editor_type = params.editor_type;\n            }\n            else {\n                params.editor_type = \"USER\";\n                editor_type = params.editor_type;\n            }\n            const updated_id = params.updated_id;\n            const editor = params.editor;\n            const itemBuyer = yield this.exec(models_1.User.findOne({ where: { id: item.buyer_id } }), { allowNull: false });\n            const itemSeller = yield this.exec(models_1.User.findOne({ where: { id: item.seller_id } }), { allowNull: false });\n            const registrationTokenBuyer = itemBuyer.registation_id;\n            const registrationTokenSeller = itemSeller.registation_id;\n            var message = \"Cập Nhật Thông Tin Đơn Hàng Của Tài Khoản \" + itemBuyer.username + \"Và\" + itemSeller.username + \" Thành công\";\n            services_1.firebaseService.sendNotification(registrationTokenBuyer, message, const_1.FCM_ACTIONS.BILL);\n            yield this.exec(item.update({ editor_type, updated_id, editor }));\n            yield this.exec(models_1.BillItem.update({ bill_id: createBill.id }, { where: { bill_id: item.id } }));\n            yield this.exec(models_1.BillActivity.update({ bill_id: createBill.id }, { where: { bill_id: item.id } }));\n            yield this.exec(models_1.PaidHistory.update({ bill_id: createBill.id }, { where: { bill_id: item.id } }));\n            return createBill;\n        });\n    }\n    getBillWithHistory(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let item = yield this.exec(this.model.findById(option.filter.id), { allowNull: false });\n            var bill = JSON.parse(JSON.stringify(item));\n            let object = [];\n            let findBillHistory;\n            try {\n                findBillHistory = yield this.exec(models_1.Bill.findOne({ where: { updated_id: item.id } }), { allowNull: false });\n            }\n            catch (e) {\n                return { current_bill: bill };\n            }\n            object.push(findBillHistory);\n            if (findBillHistory.editor_type == 'USER') {\n                var editor_user = yield this.exec(models_1.User.findOne({ where: { id: findBillHistory.editor } }), { allowNull: false });\n            }\n            if (findBillHistory.editor_type == 'EMPLOYEE') {\n                var editor_employee = yield this.exec(models_1.Employee.findOne({ where: { id: findBillHistory.editor } }), { allowNull: false });\n            }\n            while (true) {\n                try {\n                    findBillHistory = yield this.exec(models_1.Bill.findOne({ where: { updated_id: findBillHistory.id } }), { allowNull: false });\n                    object.push(findBillHistory);\n                }\n                catch (e) {\n                    break;\n                }\n            }\n            const current_bill = { bill, editor: editor_user || editor_employee };\n            return { current_bill, history: object };\n        });\n    }\n    getList(option = {\n        limit: config_1.config.database.defaultPageSize,\n        offset: 0,\n        scope: ['defaultScope']\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            option.filter['updated_id'] = null;\n            return yield this.exec(this.modelWithScope(option.scope)\n                .findAndCountAll(this.applyFindOptions(option)));\n        });\n    }\n    bulkCreateBillItem(params, bill_id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { items } = params;\n            const bulk_items = [];\n            let total_price = 0;\n            for (const item of items) {\n                const product = yield models_1.Product.findOne({\n                    where: {\n                        id: item.product_id\n                    }\n                });\n                if (!product)\n                    throw services_1.errorService.database.recordNotFound(\"Product not found \" + item.product_id);\n                total_price += item.amount * product.price;\n                bulk_items.push({\n                    product_id: item.product_id,\n                    amount: item.amount,\n                    price: product.price,\n                    bill_id\n                });\n            }\n            return {\n                total_price: total_price,\n                bulk_items: bulk_items\n            };\n        });\n    }\n    createOrder(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { items } = params;\n            const t = yield models_1.sequelize.transaction();\n            try {\n                let bill = yield this.exec(models_1.Bill.create(params, {\n                    transaction: t\n                }));\n                const { bulk_items, total_price } = yield this.bulkCreateBillItem({\n                    items: items\n                }, bill.id);\n                const bill_items = yield this.exec(models_1.BillItem.bulkCreate(bulk_items, {\n                    transaction: t\n                }));\n                const bill_activity = yield this.exec(models_1.BillActivity.create({\n                    action: 'ORDERED',\n                    bill_id: bill.id\n                }, {\n                    transaction: t\n                }));\n                const paid_history = yield this.exec(models_1.PaidHistory.create({\n                    bill_id: bill.id,\n                    remain_amount: total_price\n                }, {\n                    transaction: t\n                }));\n                bill = yield bill.update({\n                    current_paid_history_id: paid_history.id,\n                    current_bill_activity_id: bill_activity.id,\n                    total_price: total_price\n                }, {\n                    transaction: t\n                });\n                t.commit();\n                return {\n                    bill,\n                    paid_history,\n                    bill_activity,\n                    bill_items\n                };\n            }\n            catch (e) {\n                console.log(e);\n                t.rollback();\n                throw e;\n            }\n        });\n    }\n    updateBill(params, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const item = yield this.exec(this.model.findById(option.filter.id), { allowNull: false });\n            yield this.exec(item.update(params));\n            return yield this.getItem(option);\n        });\n    }\n    getBill(option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.exec(models_1.Bill.findOne({\n                where: {\n                    $or: [\n                        {\n                            id: option.id,\n                            buyer_id: option.user_id\n                        },\n                        {\n                            id: option.id,\n                            seller_id: option.user_id\n                        }\n                    ]\n                },\n                include: [\n                    {\n                        association: 'activity'\n                    },\n                    {\n                        association: 'items',\n                        include: {\n                            association: 'product'\n                        }\n                    }\n                ],\n                attributes: {\n                    include: [\n                        [models_1.sequelize.where(models_1.sequelize.col('buyer_id'), option.user_id), 'is_buy']\n                    ]\n                }\n            }));\n        });\n    }\n    changeBillActivity(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { bill_id, action } = params;\n            const t = yield models_1.sequelize.transaction();\n            try {\n                const bill_activity = yield this.exec(models_1.BillActivity.create({\n                    bill_id,\n                    action\n                }, {\n                    transaction: t\n                }));\n                yield this.exec(models_1.Bill.update({\n                    current_bill_activity_id: bill_activity.id\n                }, {\n                    where: {\n                        id: bill_id\n                    },\n                    transaction: t\n                }));\n                t.commit();\n                return bill_activity;\n            }\n            catch (e) {\n                t.rollback();\n                throw e;\n            }\n        });\n    }\n}\nexports.BillService = BillService;\n//# sourceMappingURL=billService.js.map"]}