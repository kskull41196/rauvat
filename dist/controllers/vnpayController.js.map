{"version":3,"sources":["../../build/controllers/vnpayController.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","baseController_1","require","services_1","config_1","guid","dateFormat","querystring","const_1","VnpayController","params","bill_id","billService","getItem","filter","id","bill","errorService","database","recordNotFound","amount","total_price","tmnCode","config","vnpay","secretKey","hashSecret","vnpUrl","url","payReturnUrl","vnp_Params","session_id","raw","JSON","stringify","type","ipAddr","Date","utilService","sortObject","secureHash","encode","vnpayHistoryService","create","checkSum","data","parse","parseFloat","vnpay_history","include","association","where","remain_amount","$ne","RspCode","Message","remain","paid_history","paidHistoryService","payment_method","pay_amount","vnpay_history_id","changeBillActivity","action","updateBill","current_paid_history_id","firebaseService","sendNotification","buyer","registation_id","FCM_ACTIONS","BILL","seller","console","log","BaseController"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"vnpayController.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst baseController_1 = require(\"./baseController\");\nconst services_1 = require(\"@/services\");\nconst config_1 = require(\"@/config\");\nconst guid = require(\"guid\");\nconst dateFormat = require(\"dateformat\");\nconst querystring = require(\"qs\");\nconst const_1 = require(\"@/const\");\nclass VnpayController extends baseController_1.BaseController {\n    constructor() {\n        super();\n    }\n    createPaymentBillUrl(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { bill_id } = params;\n            let bill = yield services_1.billService.getItem({\n                filter: {\n                    id: bill_id\n                }\n            });\n            if (!bill)\n                throw services_1.errorService.database.recordNotFound(\"Bill not found\");\n            params.amount = bill.total_price;\n            let tmnCode = config_1.config.vnpay.tmnCode;\n            let secretKey = config_1.config.vnpay.hashSecret;\n            let vnpUrl = config_1.config.vnpay.url;\n            let payReturnUrl = config_1.config.vnpay.payReturnUrl;\n            let vnp_Params = {};\n            let session_id = guid.raw();\n            vnp_Params['vnp_Version'] = '2';\n            vnp_Params['vnp_Command'] = 'pay';\n            vnp_Params['vnp_TmnCode'] = tmnCode;\n            vnp_Params['vnp_Locale'] = 'vn';\n            vnp_Params['vnp_CurrCode'] = 'VND';\n            vnp_Params['vnp_TxnRef'] = session_id;\n            vnp_Params['vnp_OrderInfo'] = JSON.stringify({\n                type: 'bill',\n                bill_id\n            });\n            vnp_Params['vnp_OrderType'] = 'topup';\n            // vnp_Params['vnp_BankCode'] = \"NCB\";\n            vnp_Params['vnp_Amount'] = params.amount * 100;\n            vnp_Params['vnp_ReturnUrl'] = payReturnUrl;\n            vnp_Params['vnp_IpAddr'] = params.ipAddr;\n            vnp_Params['vnp_CreateDate'] = dateFormat(new Date(), 'yyyymmddHHmmss');\n            vnp_Params = services_1.utilService.sortObject(vnp_Params);\n            let secureHash = services_1.utilService.secureHash(vnp_Params, secretKey);\n            vnp_Params['vnp_SecureHash'] = secureHash;\n            vnp_Params['vnp_SecureHashType'] = 'MD5';\n            vnpUrl += '?' + querystring.stringify(vnp_Params, { encode: true });\n            services_1.vnpayHistoryService.create({\n                session_id,\n                amount: params.amount\n            });\n            return {\n                url: vnpUrl\n            };\n        });\n    }\n    ipn(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let secureHash = params['vnp_SecureHash'];\n                delete params['vnp_SecureHash'];\n                delete params['vnp_SecureHashType'];\n                //params = this.sortObject(params);\n                let tmnCode = config_1.config.vnpay.tmnCode;\n                let secretKey = config_1.config.vnpay.hashSecret;\n                let checkSum = services_1.utilService.secureHash(params, secretKey);\n                if (secureHash === checkSum) {\n                    //Kiem tra xem du lieu trong db co hop le hay khong va thong bao ket qua\n                    let data = JSON.parse(params['vnp_OrderInfo']);\n                    let session_id = params['vnp_TxnRef'];\n                    //return data;\n                    let { type, bill_id } = data;\n                    let amount = parseFloat(params[\"vnp_Amount\"]);\n                    amount /= 100;\n                    if (params['vnp_ResponseCode'] === '00') {\n                        if (type === 'bill') {\n                            let vnpay_history = yield services_1.vnpayHistoryService.getItem({\n                                session_id: session_id\n                            });\n                            if (vnpay_history) {\n                                let bill = yield services_1.billService.getItem({\n                                    filter: {\n                                        id: bill_id\n                                    },\n                                    include: [\n                                        {\n                                            association: 'paid_history',\n                                            where: {\n                                                type: 'PARTIAL',\n                                                remain_amount: {\n                                                    $ne: 0\n                                                }\n                                            }\n                                        },\n                                        {\n                                            association: 'buyer'\n                                        },\n                                        {\n                                            association: 'seller'\n                                        }\n                                    ]\n                                });\n                                if (!bill)\n                                    return {\n                                        RspCode: \"02\",\n                                        Message: \"Order already confirmed\"\n                                    };\n                                else {\n                                    //return bill;\n                                    let remain = bill.paid_history.remain_amount;\n                                    let paid_history = yield services_1.paidHistoryService.create({\n                                        bill_id: bill_id,\n                                        payment_method: 'ONLINE',\n                                        pay_amount: amount,\n                                        type: remain - amount === 0 ? 'FULL' : 'PARTIAL',\n                                        remain_amount: remain - amount,\n                                        vnpay_history_id: vnpay_history.id\n                                    });\n                                    yield services_1.billService.changeBillActivity({\n                                        action: 'SUCCESSED',\n                                        bill_id: bill_id\n                                    });\n                                    yield services_1.billService.updateBill({\n                                        current_paid_history_id: paid_history.id\n                                    }, {\n                                        filter: {\n                                            id: bill_id\n                                        }\n                                    });\n                                    services_1.firebaseService.sendNotification(bill.buyer.registation_id, `Hoá đơn ${bill.id} đã được thanh toán`, const_1.FCM_ACTIONS.BILL);\n                                    services_1.firebaseService.sendNotification(bill.seller.registation_id, `Hoá đơn ${bill.id} đã được thanh toán`, const_1.FCM_ACTIONS.BILL);\n                                    return {\n                                        RspCode: \"00\",\n                                        Message: \"Confirm Success\"\n                                    };\n                                }\n                            }\n                            else {\n                                return {\n                                    RspCode: \"01\",\n                                    Message: \"Order not found\"\n                                };\n                            }\n                        }\n                        else {\n                            return {\n                                RspCode: \"99\"\n                            };\n                        }\n                    }\n                    // Cập nhật thanh toán lỗi và trả về\n                    else {\n                        // Update payment error\n                        if (type === 'bill') {\n                            let vnpay_history = yield services_1.vnpayHistoryService.getItem({\n                                session_id: session_id\n                            });\n                            if (!vnpay_history) {\n                                return {\n                                    RspCode: \"01\",\n                                    Message: \"Order not found\"\n                                };\n                            }\n                        }\n                        return {\n                            RspCode: \"00\",\n                            Message: \"Confirm Success\"\n                        };\n                    }\n                }\n                else {\n                    return {\n                        RspCode: \"97\",\n                        Message: \"Invalid signature\"\n                    };\n                }\n            }\n            catch (e) {\n                console.log(e);\n                return {\n                    RspCode: \"99\"\n                };\n            }\n        });\n    }\n}\nexports.VnpayController = VnpayController;\n//# sourceMappingURL=vnpayController.js.map"]}